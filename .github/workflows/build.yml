name: build

on:
  push:

env:
  HVCC_COMMIT_HASH: e04604782a027980f19b111439f434dc13098438
  CACHE_VERSION: 1
  DEBIAN_FRONTEND: noninteractive
  GIT_LFS_SKIP_SMUDGE: 1

jobs:
  # linux:
  #   strategy:
  #     matrix:
  #       target: [linux-arm64, linux-armhf, linux-i686, linux-riscv64, linux-x86_64]
  #   runs-on: ubuntu-latest
  #   container:
  #     image: ubuntu:20.04
  #   steps:
  #     - name: Install git
  #       run: |
  #         apt-get update -qq && apt-get install -yqq --no-install-recommends ca-certificates curl git openssl
  #         curl -sLO https://launchpad.net/~kxstudio-debian/+archive/ubuntu/toolchain/+files/git_2.34.1-1ubuntu1~bpo20.04.1~ppa1_amd64.deb
  #         curl -sLO https://launchpad.net/~kxstudio-debian/+archive/ubuntu/toolchain/+files/git-man_2.34.1-1ubuntu1~bpo20.04.1~ppa1_all.deb
  #         dpkg -i *.deb
  #         rm *.deb
  #     - name: Install and use python3.9
  #       run: |
  #           apt-get install -yqq python3 python3.9
  #           update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 1
  #     - name: Install pip
  #       run: apt-get install -yqq --no-install-recommends python3-pip
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #       with:
  #         submodules: recursive
  #     - uses: distrho/dpf-makefile-action@v1
  #       with:
  #         target: ${{ matrix.target }}
  #         hvcc: True
  #         dpf_path: 'dep/dpf'

  # windows:
  #   strategy:
  #     matrix:
  #       target: [win32, win64]
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #       with:
  #         submodules: recursive
  #     - uses: distrho/dpf-makefile-action@v1
  #       with:
  #         target: ${{ matrix.target }}
  #         hvcc: True
  #         dpf_path: 'dep/dpf'

  macos:
    strategy:
      matrix:
        target: [macos-intel, macos-universal]
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Import APP Certificates
        uses: apple-actions/import-codesign-certs@v2
        with:
          keychain-password : ${{ secrets.MACOS_KEYCHAIN_PASS }}
          p12-file-base64: ${{ secrets.MACOS_APP_DEV_P12 }}
          p12-password: ${{ secrets.MACOS_APP_DEV_PASS }}

      - name: Import INST Certificates
        uses: apple-actions/import-codesign-certs@v2
        with:
          keychain-password : ${{ secrets.MACOS_KEYCHAIN_PASS }}
          create-keychain : false
          p12-file-base64: ${{ secrets.MACOS_INSTALLER_DEV_P12 }}
          p12-password: ${{ secrets.MACOS_INSTALLER_DEV_PASS }}

      - uses: distrho/dpf-makefile-action@v1
        with:
          target: ${{ matrix.target }}
          hvcc: True
          dpf_path: 'dep/dpf'
          MACOS_PKG_NAME: "WSTD-EQ"
          MACOS_PKG_LICENSE_FILE: "${{ github.workspace }}/LICENSE"
          MACOS_PKG_WELCOME_TXT: "${{ github.workspace }}/welcome.txt"
          MACOS_APP_DEV_ID: ${{ secrets.MACOS_APP_DEV_ID }}
          MACOS_INSTALLER_DEV_ID: ${{ secrets.MACOS_INSTALLER_DEV_ID }}
          MACOS_NOTARIZATION_USER: ${{ secrets.MACOS_NOTARIZATION_USER }}
          MACOS_NOTARIZATION_PASS: ${{ secrets.MACOS_NOTARIZATION_PASS }}
          MACOS_NOTARIZATION_TEAM: ${{ secrets.MACOS_NOTARIZATION_TEAM }}

  # pluginval:
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         submodules: recursive
  #     - uses: distrho/dpf-makefile-action@v1
  #       with:
  #         target: pluginval
  #         hvcc: True
  #         dpf_path: 'dep/dpf'

  # source:
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         submodules: recursive
  #     - uses: distrho/dpf-makefile-action@v1
  #       with:
  #         target: source
